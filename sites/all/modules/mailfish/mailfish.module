<?php

/**
 * @File
 * Mailfish module
 */
module_load_include('inc', 'mailfish', 'mailfish.api');
module_load_include('inc', 'mailfish', 'mailfish.node');
module_load_include('inc', 'mailfish', 'mailfish.block');

/**
 * Implements hook_menu()
 */
function mailfish_menu(){
    $items = array();

    //Subscribe tab
    $items['node/%/subscribe'] = array(
        'title' => 'Subscribe',
        'description' => 'Subscribe to this node',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('mailfish_email_form',1),
        'access callback' => 'mailfish_access_subscribe_tab',
        'access arguments' => array('create mailfish subscription', 1),
        'type' => MENU_LOCAL_TASK,
    );

    //Mailfish settings page
    $items['admin/config/content/mailfish'] = array(
        'title' => 'Mailfish settings',
        'description' => 'Administer mailfish module',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('mailfish_admin_settings_form'),
        'access arguments' => array('administer mailfish settings'),
        'file' => 'mailfish.admin.inc',
    );

    //Reporting page
    $items['admin/reports/mailfish'] = array(
        'title' => 'Mailfish signups',
        'description' => 'View all mailfish subscriptions',
        'page callback' => 'mailfish_signups',
        'access arguments' => array('view mailfish subscriptions'),
        'file' => 'mailfish.admin.inc',
    );
    return $items;
}

/**
 * Access callback for mailfish tab
 */
function mailfish_access_subscribe_tab($permission, $nid){
    return mailfish_get_node_enabled($nid) && user_access($permission);
}

/**
 * Implements hook_permission()
 */
function mailfish_permission(){
    return array(
        'view mailfish permission' => array(
            'title' => t('View mailfish subscriptions'),
            'description' => t('Allow users to view the mailfish subscription'),
        ),
        'create mailfish subscription' => array(
            'title' => 'Create mailfish subscriptions',
            'description' => 'Allow users to create mailfish subcriptions',
        ),
        'administer mailfish settings' => array(
            'title' => 'Administer mailfish subscriptions',
            'description' => 'Allow users to administer mailfish subcriptions',
        ),
    );
}


/**
 * Form definition function
 */
function mailfish_email_form($form, $form_state, $nid=0){
    global $user;

    $form['email'] = array(
        '#title' => t('Email address'),
        '#type' => 'textfield',
        '#size' => 20,
        '#description' => t('Join the mailing list'),
        '#required' => TRUE,
        '#default_value' => isset($user->mail) ? $user->mail : '',
    );

    $form['nid'] = array(
        '#type' => 'hidden',
        '#value' => $nid,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Sign up'),
    );

    return $form;
}


/**
 * Form validation
 */
function mailfish_email_form_validate($form, &$form_state){
    $nid = $form_state['values']['nid'];
    $email = $form_state['values']['email'];
    if (!valid_email_address($email)){
        $email_message = t('The address %email is invalid. Please enter a valid email address', array('%email'=>$email));
        form_set_error('email', $email_message);
    }

    //do not allow multiple signups for the sane node and email address
    $query = db_select('mailfish', 'mf');
    $query->fields('mf', array('email'));
    $query->condition('mf.nid', $nid);
    $query->condition('mf.email',$email);
    $previous_signup = $query->execute()->fetchField();
    if ($previous_signup){
        form_set_error('email', t("Email already subscribed"));
    }


}


/**
 * Form submit handler
 */
function mailfish_email_form_submit($form, &$form_state){
    $nid = $form_state['values']['nid'];
    $email = $form_state['values']['email'];
    if ($nid && is_numeric($nid)){
        mailfish_signup($email, $nid);
        drupal_set_message(t('Thank you. %email has been added to the mailing list.',array('%email' => $email)));
    }
}


/**
 * Submission handler for mailfish_email_form
 */
function mailfish_signup($email, $nid){
    //dpm('Pretending to signup for this node');
    global $user;

    $value = array(
        'nid' => $nid,
        'uid' => $user->uid,
        'email' => $email,
        'created' => time(),
    );

    drupal_write_record('mailfish', $value);
}


/**
 * Implemented hook_theme()
 */
function mailfish_theme(){
    $theme = array();
    $theme['mailfish_block'] = array(
        'variables' => array(
            'form'=>'',
        ),
        'template' => 'templates/mailfish-block',
    );
    return $theme;
}


/**
 * Implements hook_form_FORM_ID_alter()
 */
function mailfish_form_node_form_alter(&$form, $form_state){
    $node = $form['#node'];
    $type = $form['#node']->type;
    $types = variable_get('mailfish_types', array());

    if (!empty($types[$type]) && user_access('administer mailfish settings')){
        $form['mailfish'] = array(
            '#title' => t('Mailfish'),
            '#type' => 'fieldset',
            '#collapsible' => TRUE,
            '#collapsed' => FALSE,
            '#group' => 'additional_settings',
            '#weight' => 100,
        );

        //add element to the fieldset
        $default_value = isset($node->mailfish_enabled) ? $node->mailfish_enabled : FALSE;
        $default_value = !isset($node->nid) ? TRUE : $default_value;
        $form['mailfish']['mailfish_enabled'] = array(
            '#type' => 'checkbox',
            '#title' => t('Collect email addresses for this node'),
            '#default_value' => $default_value,
        );
    }
}
